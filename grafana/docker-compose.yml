# docker stack deploy -c docker-compose.yml metrics
services:
  grafana:
    image: portainer/template-swarm-monitoring:grafana-9.5.2
    deploy:
      labels:
        - "cloudflared.tunnel.enabled=true"
        - "cloudflared.tunnel.port=3000"
        - "cloudflared.tunnel.hostname=metrics.alexraskin.com"
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
          - node.labels.monitoring == true
    volumes:
      - type: bind
        source: /mnt/grafana
        target: /var/lib/grafana
    env_file:
      - conf.env
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL}
    networks:
      - metrics
      - proxy
      - database

  prometheus:
    image: portainer/template-swarm-monitoring:prometheus-v2.44.0
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--log.level=error'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
          - node.labels.monitoring == true
    volumes:
      - type: bind
        source: /mnt/prometheus
        target: /prometheus
      - type: bind
        source: /mnt/prometheus/config/prometheus.yml
        target: /etc/prometheus/prometheus.yml
    networks:
      - metrics

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    command: -logtostderr -docker_only
    deploy:
      restart_policy:
        condition: any
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    volumes:
      - type: bind
        source: /
        target: /rootfs
        read_only: true
      - type: bind
        source: /var/run
        target: /var/run
        read_only: true
      - type: bind
        source: /sys
        target: /sys
        read_only: true
      - type: bind
        source: /var/lib/docker
        target: /var/lib/docker
        read_only: true
      - type: bind
        source: /dev/disk
        target: /dev/disk
        read_only: true
    networks:
      - metrics

  node-exporter:
    image: prom/node-exporter:v1.5.0
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
    deploy:
      restart_policy:
        condition: any
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    volumes:
      - type: bind
        source: /
        target: /rootfs
        read_only: true
      - type: bind
        source: /proc
        target: /host/proc
        read_only: true
      - type: bind
        source: /sys
        target: /host/sys
        read_only: true
    networks:
      - metrics

networks:
  metrics:
    driver: overlay
  proxy:
    external: true
    name: proxy
  database:
    external: true
